   0  $accept : program $end

   1  program : first_func_def extdefs
   2          | extdefs_no_func first_func_def extdefs
   3          | first_func_def
   4          | extdefs_no_func first_func_def

   5  var : IDEN indexs
   6      | IDEN

   7  extdefs_no_func : extdefs_no_func extdef_no_func
   8                  | extdef_no_func

   9  extdef_no_func : type IDEN '(' para_in ')' ';'
  10                 | VOID IDEN '(' para_in ')' ';'
  11                 | type iden_list_init ';'
  12                 | CONST type const_iden_list ';'

  13  iden_list_init : iden_list_init ',' IDEN
  14                 | iden_list_init ',' IDEN init
  15                 | iden_list_init ',' IDEN indexs_dec array_init
  16                 | iden_list_init ',' IDEN indexs_dec
  17                 | IDEN init
  18                 | IDEN
  19                 | IDEN indexs_dec array_init
  20                 | IDEN indexs_dec

  21  const_iden_list : const_iden_list ',' IDEN const_init
  22                  | IDEN const_init

  23  const_init : '=' literal

  24  extdefs : extdefs extdef
  25          | extdef

  26  extdef : type IDEN '(' para_in ')' ';'
  27         | VOID IDEN '(' para_in ')' ';'
  28         | func_def
  29         | type iden_list_init ';'
  30         | CONST type const_iden_list ';'

  31  decs_x :
  32         | decs

  33  decs : decs dec
  34       | dec

  35  dec : type iden_list_init ';'
  36      | CONST type const_iden_list ';'

  37  expr_x :
  38         | expr

  39  expr : literal
  40       | var
  41       | var PLUSPLUS
  42       | var MINUSMINUS
  43       | IDEN '(' exprs_comma_x ')' ';'
  44       | var '=' IDEN '(' exprs_comma_x ')' ';'
  45       | expr '+' expr
  46       | expr '-' expr
  47       | expr '*' expr
  48       | expr '/' expr
  49       | expr '%' expr
  50       | expr '>' expr
  51       | expr '<' expr
  52       | expr GE expr
  53       | expr LE expr
  54       | expr EQUAL expr
  55       | expr NOTEQUAL expr
  56       | NOT expr
  57       | expr ANDAND expr
  58       | expr OROR expr
  59       | '-' expr
  60       | '(' expr ')'

  61  expr_no_invoke : literal
  62                 | var
  63                 | var PLUSPLUS
  64                 | var MINUSMINUS
  65                 | expr '+' expr
  66                 | expr '-' expr
  67                 | expr '*' expr
  68                 | expr '/' expr
  69                 | expr '%' expr
  70                 | expr '>' expr
  71                 | expr '<' expr
  72                 | expr GE expr
  73                 | expr LE expr
  74                 | expr EQUAL expr
  75                 | expr NOTEQUAL expr
  76                 | NOT expr
  77                 | expr ANDAND expr
  78                 | expr OROR expr
  79                 | '-' expr
  80                 | '(' expr ')'

  81  stmts_x :
  82          | stmts

  83  stmts : stmts stmt
  84        | stmt

  85  stmt : var '=' expr
  86       | if_stmt
  87       | while_stmt
  88       | switch_stmt
  89       | for_stmt
  90       | var
  91       | BREAK ';'
  92       | CONTINUE ';'

  93  if_stmt : IF '(' expr ')' compound
  94          | IF '(' expr ')' compound ELSE compound

  95  while_stmt : WHILE '(' expr ')' compound
  96             | DO compound WHILE '(' expr ')' ';'

  97  for_stmt : FOR '(' expr_x ';' expr_x ';' expr_x ')' compound

  98  switch_stmt : SWITCH '(' IDEN ')' '{' cases default_x '}'

  99  cases : cases case
 100        | case

 101  case : CASE CHAR_LIT ':' stmts_x
 102       | CASE INT_LIT ':' stmts_x

 103  default_x :
 104            | DEFAULT ':' stmts_x

 105  first_func_def : type IDEN '(' para_in ')' compound
 106                 | VOID IDEN '(' para_in ')' compound

 107  func_def : type IDEN '(' para_in ')' compound
 108           | VOID IDEN '(' para_in ')' compound

 109  compound : '{' decs_x stmts_x '}'

 110  exprs_comma_x :
 111                | exprs_comma

 112  exprs_comma : exprs_comma ',' expr
 113              | expr

 114  exprs_comma_no_invoke_x :
 115                          | exprs_comma_no_invoke

 116  exprs_comma_no_invoke : exprs_comma_no_invoke ',' expr_no_invoke
 117                        | expr_no_invoke

 118  init : '=' expr_no_invoke

 119  array_init : '=' '{' exprs_comma_no_invoke_x '}'

 120  para_in :
 121          | paras

 122  paras : paras ',' para
 123        | para

 124  para : type IDEN indexs_dec
 125       | type IDEN

 126  indexs_dec : indexs_dec index_dec
 127             | index_dec

 128  index_dec : '[' INT_LIT ']'

 129  indexs : indexs index
 130         | index

 131  index : '[' expr ']'

 132  type : INT
 133       | DOUBLE
 134       | CHAR
 135       | BOOL

 136  literal : CHAR_LIT
 137          | INT_LIT
 138          | DOUBLE_LIT
 139          | BOOL_LIT
 140          | STRING_LIT

state 0
	$accept : . program $end  (0)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	VOID  shift 5
	CONST  shift 6
	.  error

	program  goto 7
	first_func_def  goto 8
	extdefs_no_func  goto 9
	extdef_no_func  goto 10
	type  goto 11


state 1
	type : INT .  (132)

	.  reduce 132


state 2
	type : DOUBLE .  (133)

	.  reduce 133


state 3
	type : BOOL .  (135)

	.  reduce 135


state 4
	type : CHAR .  (134)

	.  reduce 134


state 5
	extdef_no_func : VOID . IDEN '(' para_in ')' ';'  (10)
	first_func_def : VOID . IDEN '(' para_in ')' compound  (106)

	IDEN  shift 12
	.  error


state 6
	extdef_no_func : CONST . type const_iden_list ';'  (12)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	type  goto 13


state 7
	$accept : program . $end  (0)

	$end  accept


state 8
	program : first_func_def . extdefs  (1)
	program : first_func_def .  (3)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	VOID  shift 14
	CONST  shift 15
	$end  reduce 3

	extdefs  goto 16
	type  goto 17
	extdef  goto 18
	func_def  goto 19


state 9
	program : extdefs_no_func . first_func_def extdefs  (2)
	program : extdefs_no_func . first_func_def  (4)
	extdefs_no_func : extdefs_no_func . extdef_no_func  (7)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	VOID  shift 5
	CONST  shift 6
	.  error

	first_func_def  goto 20
	extdef_no_func  goto 21
	type  goto 11


state 10
	extdefs_no_func : extdef_no_func .  (8)

	.  reduce 8


state 11
	extdef_no_func : type . IDEN '(' para_in ')' ';'  (9)
	extdef_no_func : type . iden_list_init ';'  (11)
	first_func_def : type . IDEN '(' para_in ')' compound  (105)

	IDEN  shift 22
	.  error

	iden_list_init  goto 23


state 12
	extdef_no_func : VOID IDEN . '(' para_in ')' ';'  (10)
	first_func_def : VOID IDEN . '(' para_in ')' compound  (106)

	'('  shift 24
	.  error


state 13
	extdef_no_func : CONST type . const_iden_list ';'  (12)

	IDEN  shift 25
	.  error

	const_iden_list  goto 26


state 14
	extdef : VOID . IDEN '(' para_in ')' ';'  (27)
	func_def : VOID . IDEN '(' para_in ')' compound  (108)

	IDEN  shift 27
	.  error


state 15
	extdef : CONST . type const_iden_list ';'  (30)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	type  goto 28


state 16
	program : first_func_def extdefs .  (1)
	extdefs : extdefs . extdef  (24)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	VOID  shift 14
	CONST  shift 15
	$end  reduce 1

	type  goto 17
	extdef  goto 29
	func_def  goto 19


state 17
	extdef : type . IDEN '(' para_in ')' ';'  (26)
	extdef : type . iden_list_init ';'  (29)
	func_def : type . IDEN '(' para_in ')' compound  (107)

	IDEN  shift 30
	.  error

	iden_list_init  goto 31


state 18
	extdefs : extdef .  (25)

	.  reduce 25


state 19
	extdef : func_def .  (28)

	.  reduce 28


state 20
	program : extdefs_no_func first_func_def . extdefs  (2)
	program : extdefs_no_func first_func_def .  (4)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	VOID  shift 14
	CONST  shift 15
	$end  reduce 4

	extdefs  goto 32
	type  goto 17
	extdef  goto 18
	func_def  goto 19


state 21
	extdefs_no_func : extdefs_no_func extdef_no_func .  (7)

	.  reduce 7


state 22
	extdef_no_func : type IDEN . '(' para_in ')' ';'  (9)
	iden_list_init : IDEN . init  (17)
	iden_list_init : IDEN .  (18)
	iden_list_init : IDEN . indexs_dec array_init  (19)
	iden_list_init : IDEN . indexs_dec  (20)
	first_func_def : type IDEN . '(' para_in ')' compound  (105)

	'('  shift 33
	'='  shift 34
	'['  shift 35
	';'  reduce 18
	','  reduce 18

	init  goto 36
	indexs_dec  goto 37
	index_dec  goto 38


state 23
	extdef_no_func : type iden_list_init . ';'  (11)
	iden_list_init : iden_list_init . ',' IDEN  (13)
	iden_list_init : iden_list_init . ',' IDEN init  (14)
	iden_list_init : iden_list_init . ',' IDEN indexs_dec array_init  (15)
	iden_list_init : iden_list_init . ',' IDEN indexs_dec  (16)

	';'  shift 39
	','  shift 40
	.  error


state 24
	extdef_no_func : VOID IDEN '(' . para_in ')' ';'  (10)
	first_func_def : VOID IDEN '(' . para_in ')' compound  (106)
	para_in : .  (120)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	')'  reduce 120

	type  goto 41
	para_in  goto 42
	paras  goto 43
	para  goto 44


state 25
	const_iden_list : IDEN . const_init  (22)

	'='  shift 45
	.  error

	const_init  goto 46


state 26
	extdef_no_func : CONST type const_iden_list . ';'  (12)
	const_iden_list : const_iden_list . ',' IDEN const_init  (21)

	';'  shift 47
	','  shift 48
	.  error


state 27
	extdef : VOID IDEN . '(' para_in ')' ';'  (27)
	func_def : VOID IDEN . '(' para_in ')' compound  (108)

	'('  shift 49
	.  error


state 28
	extdef : CONST type . const_iden_list ';'  (30)

	IDEN  shift 25
	.  error

	const_iden_list  goto 50


state 29
	extdefs : extdefs extdef .  (24)

	.  reduce 24


state 30
	iden_list_init : IDEN . init  (17)
	iden_list_init : IDEN .  (18)
	iden_list_init : IDEN . indexs_dec array_init  (19)
	iden_list_init : IDEN . indexs_dec  (20)
	extdef : type IDEN . '(' para_in ')' ';'  (26)
	func_def : type IDEN . '(' para_in ')' compound  (107)

	'('  shift 51
	'='  shift 34
	'['  shift 35
	';'  reduce 18
	','  reduce 18

	init  goto 36
	indexs_dec  goto 37
	index_dec  goto 38


state 31
	iden_list_init : iden_list_init . ',' IDEN  (13)
	iden_list_init : iden_list_init . ',' IDEN init  (14)
	iden_list_init : iden_list_init . ',' IDEN indexs_dec array_init  (15)
	iden_list_init : iden_list_init . ',' IDEN indexs_dec  (16)
	extdef : type iden_list_init . ';'  (29)

	';'  shift 52
	','  shift 40
	.  error


state 32
	program : extdefs_no_func first_func_def extdefs .  (2)
	extdefs : extdefs . extdef  (24)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	VOID  shift 14
	CONST  shift 15
	$end  reduce 2

	type  goto 17
	extdef  goto 29
	func_def  goto 19


state 33
	extdef_no_func : type IDEN '(' . para_in ')' ';'  (9)
	first_func_def : type IDEN '(' . para_in ')' compound  (105)
	para_in : .  (120)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	')'  reduce 120

	type  goto 41
	para_in  goto 53
	paras  goto 43
	para  goto 44


state 34
	init : '=' . expr_no_invoke  (118)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 58
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 61
	'('  shift 62
	.  error

	literal  goto 63
	expr  goto 64
	var  goto 65
	expr_no_invoke  goto 66


state 35
	index_dec : '[' . INT_LIT ']'  (128)

	INT_LIT  shift 67
	.  error


state 36
	iden_list_init : IDEN init .  (17)

	.  reduce 17


state 37
	iden_list_init : IDEN indexs_dec . array_init  (19)
	iden_list_init : IDEN indexs_dec .  (20)
	indexs_dec : indexs_dec . index_dec  (126)

	'='  shift 68
	'['  shift 35
	';'  reduce 20
	','  reduce 20

	array_init  goto 69
	index_dec  goto 70


state 38
	indexs_dec : index_dec .  (127)

	.  reduce 127


state 39
	extdef_no_func : type iden_list_init ';' .  (11)

	.  reduce 11


state 40
	iden_list_init : iden_list_init ',' . IDEN  (13)
	iden_list_init : iden_list_init ',' . IDEN init  (14)
	iden_list_init : iden_list_init ',' . IDEN indexs_dec array_init  (15)
	iden_list_init : iden_list_init ',' . IDEN indexs_dec  (16)

	IDEN  shift 71
	.  error


state 41
	para : type . IDEN indexs_dec  (124)
	para : type . IDEN  (125)

	IDEN  shift 72
	.  error


state 42
	extdef_no_func : VOID IDEN '(' para_in . ')' ';'  (10)
	first_func_def : VOID IDEN '(' para_in . ')' compound  (106)

	')'  shift 73
	.  error


state 43
	para_in : paras .  (121)
	paras : paras . ',' para  (122)

	','  shift 74
	')'  reduce 121


state 44
	paras : para .  (123)

	.  reduce 123


state 45
	const_init : '=' . literal  (23)

	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	.  error

	literal  goto 75


state 46
	const_iden_list : IDEN const_init .  (22)

	.  reduce 22


state 47
	extdef_no_func : CONST type const_iden_list ';' .  (12)

	.  reduce 12


state 48
	const_iden_list : const_iden_list ',' . IDEN const_init  (21)

	IDEN  shift 76
	.  error


state 49
	extdef : VOID IDEN '(' . para_in ')' ';'  (27)
	func_def : VOID IDEN '(' . para_in ')' compound  (108)
	para_in : .  (120)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	')'  reduce 120

	type  goto 41
	para_in  goto 77
	paras  goto 43
	para  goto 44


state 50
	const_iden_list : const_iden_list . ',' IDEN const_init  (21)
	extdef : CONST type const_iden_list . ';'  (30)

	';'  shift 78
	','  shift 48
	.  error


state 51
	extdef : type IDEN '(' . para_in ')' ';'  (26)
	func_def : type IDEN '(' . para_in ')' compound  (107)
	para_in : .  (120)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	')'  reduce 120

	type  goto 41
	para_in  goto 79
	paras  goto 43
	para  goto 44


state 52
	extdef : type iden_list_init ';' .  (29)

	.  reduce 29


state 53
	extdef_no_func : type IDEN '(' para_in . ')' ';'  (9)
	first_func_def : type IDEN '(' para_in . ')' compound  (105)

	')'  shift 80
	.  error


state 54
	var : IDEN . indexs  (5)
	var : IDEN .  (6)
	expr : IDEN . '(' exprs_comma_x ')' ';'  (43)

	'('  shift 81
	'['  shift 82
	IDEN  reduce 6
	SWITCH  reduce 6
	CASE  reduce 6
	DEFAULT  reduce 6
	IF  reduce 6
	FOR  reduce 6
	WHILE  reduce 6
	DO  reduce 6
	CONTINUE  reduce 6
	BREAK  reduce 6
	PLUSPLUS  reduce 6
	MINUSMINUS  reduce 6
	ANDAND  reduce 6
	OROR  reduce 6
	GE  reduce 6
	LE  reduce 6
	EQUAL  reduce 6
	NOTEQUAL  reduce 6
	'>'  reduce 6
	'<'  reduce 6
	'+'  reduce 6
	'-'  reduce 6
	'*'  reduce 6
	'/'  reduce 6
	'%'  reduce 6
	')'  reduce 6
	';'  reduce 6
	','  reduce 6
	'='  reduce 6
	'}'  reduce 6
	']'  reduce 6

	indexs  goto 83
	index  goto 84


state 55
	literal : STRING_LIT .  (140)

	.  reduce 140


state 56
	literal : INT_LIT .  (137)

	.  reduce 137


state 57
	literal : BOOL_LIT .  (139)

	.  reduce 139


state 58
	expr : NOT . expr  (56)
	expr_no_invoke : NOT . expr  (76)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 89
	var  goto 90


state 59
	literal : CHAR_LIT .  (136)

	.  reduce 136


state 60
	literal : DOUBLE_LIT .  (138)

	.  reduce 138


state 61
	expr : '-' . expr  (59)
	expr_no_invoke : '-' . expr  (79)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 91
	var  goto 90


state 62
	expr : '(' . expr ')'  (60)
	expr_no_invoke : '(' . expr ')'  (80)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 92
	var  goto 90


state 63
	expr : literal .  (39)
	expr_no_invoke : literal .  (61)

	ANDAND  reduce 39
	OROR  reduce 39
	GE  reduce 39
	LE  reduce 39
	EQUAL  reduce 39
	NOTEQUAL  reduce 39
	'>'  reduce 39
	'<'  reduce 39
	'+'  reduce 39
	'-'  reduce 39
	'*'  reduce 39
	'/'  reduce 39
	'%'  reduce 39
	';'  reduce 61
	','  reduce 61
	'}'  reduce 61


state 64
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr . '+' expr  (65)
	expr_no_invoke : expr . '-' expr  (66)
	expr_no_invoke : expr . '*' expr  (67)
	expr_no_invoke : expr . '/' expr  (68)
	expr_no_invoke : expr . '%' expr  (69)
	expr_no_invoke : expr . '>' expr  (70)
	expr_no_invoke : expr . '<' expr  (71)
	expr_no_invoke : expr . GE expr  (72)
	expr_no_invoke : expr . LE expr  (73)
	expr_no_invoke : expr . EQUAL expr  (74)
	expr_no_invoke : expr . NOTEQUAL expr  (75)
	expr_no_invoke : expr . ANDAND expr  (77)
	expr_no_invoke : expr . OROR expr  (78)

	ANDAND  shift 93
	OROR  shift 94
	GE  shift 95
	LE  shift 96
	EQUAL  shift 97
	NOTEQUAL  shift 98
	'>'  shift 99
	'<'  shift 100
	'+'  shift 101
	'-'  shift 102
	'*'  shift 103
	'/'  shift 104
	'%'  shift 105
	.  error


state 65
	expr : var .  (40)
	expr : var . PLUSPLUS  (41)
	expr : var . MINUSMINUS  (42)
	expr : var . '=' IDEN '(' exprs_comma_x ')' ';'  (44)
	expr_no_invoke : var .  (62)
	expr_no_invoke : var . PLUSPLUS  (63)
	expr_no_invoke : var . MINUSMINUS  (64)

	PLUSPLUS  shift 106
	MINUSMINUS  shift 107
	'='  shift 108
	ANDAND  reduce 40
	OROR  reduce 40
	GE  reduce 40
	LE  reduce 40
	EQUAL  reduce 40
	NOTEQUAL  reduce 40
	'>'  reduce 40
	'<'  reduce 40
	'+'  reduce 40
	'-'  reduce 40
	'*'  reduce 40
	'/'  reduce 40
	'%'  reduce 40
	';'  reduce 62
	','  reduce 62
	'}'  reduce 62


state 66
	init : '=' expr_no_invoke .  (118)

	.  reduce 118


state 67
	index_dec : '[' INT_LIT . ']'  (128)

	']'  shift 109
	.  error


state 68
	array_init : '=' . '{' exprs_comma_no_invoke_x '}'  (119)

	'{'  shift 110
	.  error


state 69
	iden_list_init : IDEN indexs_dec array_init .  (19)

	.  reduce 19


state 70
	indexs_dec : indexs_dec index_dec .  (126)

	.  reduce 126


state 71
	iden_list_init : iden_list_init ',' IDEN .  (13)
	iden_list_init : iden_list_init ',' IDEN . init  (14)
	iden_list_init : iden_list_init ',' IDEN . indexs_dec array_init  (15)
	iden_list_init : iden_list_init ',' IDEN . indexs_dec  (16)

	'='  shift 34
	'['  shift 35
	';'  reduce 13
	','  reduce 13

	init  goto 111
	indexs_dec  goto 112
	index_dec  goto 38


state 72
	para : type IDEN . indexs_dec  (124)
	para : type IDEN .  (125)

	'['  shift 35
	')'  reduce 125
	','  reduce 125

	indexs_dec  goto 113
	index_dec  goto 38


state 73
	extdef_no_func : VOID IDEN '(' para_in ')' . ';'  (10)
	first_func_def : VOID IDEN '(' para_in ')' . compound  (106)

	';'  shift 114
	'{'  shift 115
	.  error

	compound  goto 116


state 74
	paras : paras ',' . para  (122)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	type  goto 41
	para  goto 117


state 75
	const_init : '=' literal .  (23)

	.  reduce 23


state 76
	const_iden_list : const_iden_list ',' IDEN . const_init  (21)

	'='  shift 45
	.  error

	const_init  goto 118


state 77
	extdef : VOID IDEN '(' para_in . ')' ';'  (27)
	func_def : VOID IDEN '(' para_in . ')' compound  (108)

	')'  shift 119
	.  error


state 78
	extdef : CONST type const_iden_list ';' .  (30)

	.  reduce 30


state 79
	extdef : type IDEN '(' para_in . ')' ';'  (26)
	func_def : type IDEN '(' para_in . ')' compound  (107)

	')'  shift 120
	.  error


state 80
	extdef_no_func : type IDEN '(' para_in ')' . ';'  (9)
	first_func_def : type IDEN '(' para_in ')' . compound  (105)

	';'  shift 121
	'{'  shift 115
	.  error

	compound  goto 122


state 81
	expr : IDEN '(' . exprs_comma_x ')' ';'  (43)
	exprs_comma_x : .  (110)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	')'  reduce 110

	literal  goto 88
	expr  goto 123
	var  goto 90
	exprs_comma_x  goto 124
	exprs_comma  goto 125


state 82
	index : '[' . expr ']'  (131)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 126
	var  goto 90


state 83
	var : IDEN indexs .  (5)
	indexs : indexs . index  (129)

	'['  shift 82
	IDEN  reduce 5
	SWITCH  reduce 5
	CASE  reduce 5
	DEFAULT  reduce 5
	IF  reduce 5
	FOR  reduce 5
	WHILE  reduce 5
	DO  reduce 5
	CONTINUE  reduce 5
	BREAK  reduce 5
	PLUSPLUS  reduce 5
	MINUSMINUS  reduce 5
	ANDAND  reduce 5
	OROR  reduce 5
	GE  reduce 5
	LE  reduce 5
	EQUAL  reduce 5
	NOTEQUAL  reduce 5
	'>'  reduce 5
	'<'  reduce 5
	'+'  reduce 5
	'-'  reduce 5
	'*'  reduce 5
	'/'  reduce 5
	'%'  reduce 5
	')'  reduce 5
	';'  reduce 5
	','  reduce 5
	'='  reduce 5
	'}'  reduce 5
	']'  reduce 5

	index  goto 127


state 84
	indexs : index .  (130)

	.  reduce 130


state 85
	expr : NOT . expr  (56)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 128
	var  goto 90


state 86
	expr : '-' . expr  (59)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 129
	var  goto 90


state 87
	expr : '(' . expr ')'  (60)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 130
	var  goto 90


state 88
	expr : literal .  (39)

	.  reduce 39


state 89
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : NOT expr .  (56)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : NOT expr .  (76)

	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 56
	OROR  reduce 56
	';'  reduce 76
	','  reduce 76
	'}'  reduce 76


state 90
	expr : var .  (40)
	expr : var . PLUSPLUS  (41)
	expr : var . MINUSMINUS  (42)
	expr : var . '=' IDEN '(' exprs_comma_x ')' ';'  (44)

	PLUSPLUS  shift 144
	MINUSMINUS  shift 145
	'='  shift 108
	IDEN  reduce 40
	SWITCH  reduce 40
	CASE  reduce 40
	DEFAULT  reduce 40
	IF  reduce 40
	FOR  reduce 40
	WHILE  reduce 40
	DO  reduce 40
	CONTINUE  reduce 40
	BREAK  reduce 40
	ANDAND  reduce 40
	OROR  reduce 40
	GE  reduce 40
	LE  reduce 40
	EQUAL  reduce 40
	NOTEQUAL  reduce 40
	'>'  reduce 40
	'<'  reduce 40
	'+'  reduce 40
	'-'  reduce 40
	'*'  reduce 40
	'/'  reduce 40
	'%'  reduce 40
	')'  reduce 40
	';'  reduce 40
	','  reduce 40
	'}'  reduce 40
	']'  reduce 40


state 91
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr : '-' expr .  (59)
	expr_no_invoke : '-' expr .  (79)

	ANDAND  reduce 59
	OROR  reduce 59
	GE  reduce 59
	LE  reduce 59
	EQUAL  reduce 59
	NOTEQUAL  reduce 59
	'>'  reduce 59
	'<'  reduce 59
	'+'  reduce 59
	'-'  reduce 59
	'*'  reduce 59
	'/'  reduce 59
	'%'  reduce 59
	';'  reduce 79
	','  reduce 79
	'}'  reduce 79


state 92
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr : '(' expr . ')'  (60)
	expr_no_invoke : '(' expr . ')'  (80)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  shift 146
	.  error


state 93
	expr : expr ANDAND . expr  (57)
	expr_no_invoke : expr ANDAND . expr  (77)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 147
	var  goto 90


state 94
	expr : expr OROR . expr  (58)
	expr_no_invoke : expr OROR . expr  (78)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 148
	var  goto 90


state 95
	expr : expr GE . expr  (52)
	expr_no_invoke : expr GE . expr  (72)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 149
	var  goto 90


state 96
	expr : expr LE . expr  (53)
	expr_no_invoke : expr LE . expr  (73)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 150
	var  goto 90


state 97
	expr : expr EQUAL . expr  (54)
	expr_no_invoke : expr EQUAL . expr  (74)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 151
	var  goto 90


state 98
	expr : expr NOTEQUAL . expr  (55)
	expr_no_invoke : expr NOTEQUAL . expr  (75)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 152
	var  goto 90


state 99
	expr : expr '>' . expr  (50)
	expr_no_invoke : expr '>' . expr  (70)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 153
	var  goto 90


state 100
	expr : expr '<' . expr  (51)
	expr_no_invoke : expr '<' . expr  (71)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 154
	var  goto 90


state 101
	expr : expr '+' . expr  (45)
	expr_no_invoke : expr '+' . expr  (65)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 155
	var  goto 90


state 102
	expr : expr '-' . expr  (46)
	expr_no_invoke : expr '-' . expr  (66)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 156
	var  goto 90


state 103
	expr : expr '*' . expr  (47)
	expr_no_invoke : expr '*' . expr  (67)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 157
	var  goto 90


state 104
	expr : expr '/' . expr  (48)
	expr_no_invoke : expr '/' . expr  (68)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 158
	var  goto 90


state 105
	expr : expr '%' . expr  (49)
	expr_no_invoke : expr '%' . expr  (69)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 159
	var  goto 90


state 106
	expr : var PLUSPLUS .  (41)
	expr_no_invoke : var PLUSPLUS .  (63)

	ANDAND  reduce 41
	OROR  reduce 41
	GE  reduce 41
	LE  reduce 41
	EQUAL  reduce 41
	NOTEQUAL  reduce 41
	'>'  reduce 41
	'<'  reduce 41
	'+'  reduce 41
	'-'  reduce 41
	'*'  reduce 41
	'/'  reduce 41
	'%'  reduce 41
	';'  reduce 63
	','  reduce 63
	'}'  reduce 63


state 107
	expr : var MINUSMINUS .  (42)
	expr_no_invoke : var MINUSMINUS .  (64)

	ANDAND  reduce 42
	OROR  reduce 42
	GE  reduce 42
	LE  reduce 42
	EQUAL  reduce 42
	NOTEQUAL  reduce 42
	'>'  reduce 42
	'<'  reduce 42
	'+'  reduce 42
	'-'  reduce 42
	'*'  reduce 42
	'/'  reduce 42
	'%'  reduce 42
	';'  reduce 64
	','  reduce 64
	'}'  reduce 64


state 108
	expr : var '=' . IDEN '(' exprs_comma_x ')' ';'  (44)

	IDEN  shift 160
	.  error


state 109
	index_dec : '[' INT_LIT ']' .  (128)

	.  reduce 128


state 110
	array_init : '=' '{' . exprs_comma_no_invoke_x '}'  (119)
	exprs_comma_no_invoke_x : .  (114)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 58
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 61
	'('  shift 62
	'}'  reduce 114

	literal  goto 63
	expr  goto 64
	var  goto 65
	expr_no_invoke  goto 161
	exprs_comma_no_invoke_x  goto 162
	exprs_comma_no_invoke  goto 163


state 111
	iden_list_init : iden_list_init ',' IDEN init .  (14)

	.  reduce 14


state 112
	iden_list_init : iden_list_init ',' IDEN indexs_dec . array_init  (15)
	iden_list_init : iden_list_init ',' IDEN indexs_dec .  (16)
	indexs_dec : indexs_dec . index_dec  (126)

	'='  shift 68
	'['  shift 35
	';'  reduce 16
	','  reduce 16

	array_init  goto 164
	index_dec  goto 70


state 113
	para : type IDEN indexs_dec .  (124)
	indexs_dec : indexs_dec . index_dec  (126)

	'['  shift 35
	')'  reduce 124
	','  reduce 124

	index_dec  goto 70


state 114
	extdef_no_func : VOID IDEN '(' para_in ')' ';' .  (10)

	.  reduce 10


state 115
	compound : '{' . decs_x stmts_x '}'  (109)
	decs_x : .  (31)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	CONST  shift 165
	IDEN  reduce 31
	SWITCH  reduce 31
	IF  reduce 31
	FOR  reduce 31
	WHILE  reduce 31
	DO  reduce 31
	CONTINUE  reduce 31
	BREAK  reduce 31
	'}'  reduce 31

	type  goto 166
	decs_x  goto 167
	decs  goto 168
	dec  goto 169


state 116
	first_func_def : VOID IDEN '(' para_in ')' compound .  (106)

	.  reduce 106


state 117
	paras : paras ',' para .  (122)

	.  reduce 122


state 118
	const_iden_list : const_iden_list ',' IDEN const_init .  (21)

	.  reduce 21


state 119
	extdef : VOID IDEN '(' para_in ')' . ';'  (27)
	func_def : VOID IDEN '(' para_in ')' . compound  (108)

	';'  shift 170
	'{'  shift 115
	.  error

	compound  goto 171


state 120
	extdef : type IDEN '(' para_in ')' . ';'  (26)
	func_def : type IDEN '(' para_in ')' . compound  (107)

	';'  shift 172
	'{'  shift 115
	.  error

	compound  goto 173


state 121
	extdef_no_func : type IDEN '(' para_in ')' ';' .  (9)

	.  reduce 9


state 122
	first_func_def : type IDEN '(' para_in ')' compound .  (105)

	.  reduce 105


state 123
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	exprs_comma : expr .  (113)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  reduce 113
	','  reduce 113


state 124
	expr : IDEN '(' exprs_comma_x . ')' ';'  (43)

	')'  shift 174
	.  error


state 125
	exprs_comma_x : exprs_comma .  (111)
	exprs_comma : exprs_comma . ',' expr  (112)

	','  shift 175
	')'  reduce 111


state 126
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	index : '[' expr . ']'  (131)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	']'  shift 176
	.  error


state 127
	indexs : indexs index .  (129)

	.  reduce 129


state 128
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : NOT expr .  (56)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 56
	SWITCH  reduce 56
	CASE  reduce 56
	DEFAULT  reduce 56
	IF  reduce 56
	FOR  reduce 56
	WHILE  reduce 56
	DO  reduce 56
	CONTINUE  reduce 56
	BREAK  reduce 56
	ANDAND  reduce 56
	OROR  reduce 56
	')'  reduce 56
	';'  reduce 56
	','  reduce 56
	'}'  reduce 56
	']'  reduce 56


state 129
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr : '-' expr .  (59)

	.  reduce 59


state 130
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr : '(' expr . ')'  (60)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  shift 177
	.  error


state 131
	expr : expr ANDAND . expr  (57)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 178
	var  goto 90


state 132
	expr : expr OROR . expr  (58)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 179
	var  goto 90


state 133
	expr : expr GE . expr  (52)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 180
	var  goto 90


state 134
	expr : expr LE . expr  (53)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 181
	var  goto 90


state 135
	expr : expr EQUAL . expr  (54)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 182
	var  goto 90


state 136
	expr : expr NOTEQUAL . expr  (55)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 183
	var  goto 90


state 137
	expr : expr '>' . expr  (50)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 184
	var  goto 90


state 138
	expr : expr '<' . expr  (51)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 185
	var  goto 90


state 139
	expr : expr '+' . expr  (45)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 186
	var  goto 90


state 140
	expr : expr '-' . expr  (46)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 187
	var  goto 90


state 141
	expr : expr '*' . expr  (47)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 188
	var  goto 90


state 142
	expr : expr '/' . expr  (48)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 189
	var  goto 90


state 143
	expr : expr '%' . expr  (49)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 190
	var  goto 90


state 144
	expr : var PLUSPLUS .  (41)

	.  reduce 41


state 145
	expr : var MINUSMINUS .  (42)

	.  reduce 42


state 146
	expr : '(' expr ')' .  (60)
	expr_no_invoke : '(' expr ')' .  (80)

	ANDAND  reduce 60
	OROR  reduce 60
	GE  reduce 60
	LE  reduce 60
	EQUAL  reduce 60
	NOTEQUAL  reduce 60
	'>'  reduce 60
	'<'  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	'*'  reduce 60
	'/'  reduce 60
	'%'  reduce 60
	';'  reduce 80
	','  reduce 80
	'}'  reduce 80


state 147
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr ANDAND expr .  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr ANDAND expr .  (77)

	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 57
	OROR  reduce 57
	';'  reduce 77
	','  reduce 77
	'}'  reduce 77


state 148
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr : expr OROR expr .  (58)
	expr_no_invoke : expr OROR expr .  (78)

	ANDAND  shift 131
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	OROR  reduce 58
	';'  reduce 78
	','  reduce 78
	'}'  reduce 78


state 149
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr GE expr .  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr GE expr .  (72)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 52
	OROR  reduce 52
	GE  reduce 52
	LE  reduce 52
	EQUAL  reduce 52
	NOTEQUAL  reduce 52
	'>'  reduce 52
	'<'  reduce 52
	';'  reduce 72
	','  reduce 72
	'}'  reduce 72


state 150
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr LE expr .  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr LE expr .  (73)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 53
	OROR  reduce 53
	GE  reduce 53
	LE  reduce 53
	EQUAL  reduce 53
	NOTEQUAL  reduce 53
	'>'  reduce 53
	'<'  reduce 53
	';'  reduce 73
	','  reduce 73
	'}'  reduce 73


state 151
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr EQUAL expr .  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr EQUAL expr .  (74)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 54
	OROR  reduce 54
	GE  reduce 54
	LE  reduce 54
	EQUAL  reduce 54
	NOTEQUAL  reduce 54
	'>'  reduce 54
	'<'  reduce 54
	';'  reduce 74
	','  reduce 74
	'}'  reduce 74


state 152
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr NOTEQUAL expr .  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr NOTEQUAL expr .  (75)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 55
	OROR  reduce 55
	GE  reduce 55
	LE  reduce 55
	EQUAL  reduce 55
	NOTEQUAL  reduce 55
	'>'  reduce 55
	'<'  reduce 55
	';'  reduce 75
	','  reduce 75
	'}'  reduce 75


state 153
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr '>' expr .  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr '>' expr .  (70)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 50
	OROR  reduce 50
	GE  reduce 50
	LE  reduce 50
	EQUAL  reduce 50
	NOTEQUAL  reduce 50
	'>'  reduce 50
	'<'  reduce 50
	';'  reduce 70
	','  reduce 70
	'}'  reduce 70


state 154
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr '<' expr .  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr '<' expr .  (71)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 51
	OROR  reduce 51
	GE  reduce 51
	LE  reduce 51
	EQUAL  reduce 51
	NOTEQUAL  reduce 51
	'>'  reduce 51
	'<'  reduce 51
	';'  reduce 71
	','  reduce 71
	'}'  reduce 71


state 155
	expr : expr . '+' expr  (45)
	expr : expr '+' expr .  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr '+' expr .  (65)

	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 45
	OROR  reduce 45
	GE  reduce 45
	LE  reduce 45
	EQUAL  reduce 45
	NOTEQUAL  reduce 45
	'>'  reduce 45
	'<'  reduce 45
	'+'  reduce 45
	'-'  reduce 45
	';'  reduce 65
	','  reduce 65
	'}'  reduce 65


state 156
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr '-' expr .  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr '-' expr .  (66)

	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	ANDAND  reduce 46
	OROR  reduce 46
	GE  reduce 46
	LE  reduce 46
	EQUAL  reduce 46
	NOTEQUAL  reduce 46
	'>'  reduce 46
	'<'  reduce 46
	'+'  reduce 46
	'-'  reduce 46
	';'  reduce 66
	','  reduce 66
	'}'  reduce 66


state 157
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr '*' expr .  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr '*' expr .  (67)

	ANDAND  reduce 47
	OROR  reduce 47
	GE  reduce 47
	LE  reduce 47
	EQUAL  reduce 47
	NOTEQUAL  reduce 47
	'>'  reduce 47
	'<'  reduce 47
	'+'  reduce 47
	'-'  reduce 47
	'*'  reduce 47
	'/'  reduce 47
	'%'  reduce 47
	';'  reduce 67
	','  reduce 67
	'}'  reduce 67


state 158
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr '/' expr .  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr '/' expr .  (68)

	ANDAND  reduce 48
	OROR  reduce 48
	GE  reduce 48
	LE  reduce 48
	EQUAL  reduce 48
	NOTEQUAL  reduce 48
	'>'  reduce 48
	'<'  reduce 48
	'+'  reduce 48
	'-'  reduce 48
	'*'  reduce 48
	'/'  reduce 48
	'%'  reduce 48
	';'  reduce 68
	','  reduce 68
	'}'  reduce 68


state 159
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr '%' expr .  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr_no_invoke : expr '%' expr .  (69)

	ANDAND  reduce 49
	OROR  reduce 49
	GE  reduce 49
	LE  reduce 49
	EQUAL  reduce 49
	NOTEQUAL  reduce 49
	'>'  reduce 49
	'<'  reduce 49
	'+'  reduce 49
	'-'  reduce 49
	'*'  reduce 49
	'/'  reduce 49
	'%'  reduce 49
	';'  reduce 69
	','  reduce 69
	'}'  reduce 69


state 160
	expr : var '=' IDEN . '(' exprs_comma_x ')' ';'  (44)

	'('  shift 191
	.  error


state 161
	exprs_comma_no_invoke : expr_no_invoke .  (117)

	.  reduce 117


state 162
	array_init : '=' '{' exprs_comma_no_invoke_x . '}'  (119)

	'}'  shift 192
	.  error


state 163
	exprs_comma_no_invoke_x : exprs_comma_no_invoke .  (115)
	exprs_comma_no_invoke : exprs_comma_no_invoke . ',' expr_no_invoke  (116)

	','  shift 193
	'}'  reduce 115


state 164
	iden_list_init : iden_list_init ',' IDEN indexs_dec array_init .  (15)

	.  reduce 15


state 165
	dec : CONST . type const_iden_list ';'  (36)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	.  error

	type  goto 194


state 166
	dec : type . iden_list_init ';'  (35)

	IDEN  shift 195
	.  error

	iden_list_init  goto 196


state 167
	compound : '{' decs_x . stmts_x '}'  (109)
	stmts_x : .  (81)

	IDEN  shift 197
	SWITCH  shift 198
	IF  shift 199
	FOR  shift 200
	WHILE  shift 201
	DO  shift 202
	CONTINUE  shift 203
	BREAK  shift 204
	'}'  reduce 81

	var  goto 205
	stmts_x  goto 206
	stmts  goto 207
	stmt  goto 208
	if_stmt  goto 209
	while_stmt  goto 210
	switch_stmt  goto 211
	for_stmt  goto 212


state 168
	decs_x : decs .  (32)
	decs : decs . dec  (33)

	INT  shift 1
	DOUBLE  shift 2
	BOOL  shift 3
	CHAR  shift 4
	CONST  shift 165
	IDEN  reduce 32
	SWITCH  reduce 32
	IF  reduce 32
	FOR  reduce 32
	WHILE  reduce 32
	DO  reduce 32
	CONTINUE  reduce 32
	BREAK  reduce 32
	'}'  reduce 32

	type  goto 166
	dec  goto 213


state 169
	decs : dec .  (34)

	.  reduce 34


state 170
	extdef : VOID IDEN '(' para_in ')' ';' .  (27)

	.  reduce 27


state 171
	func_def : VOID IDEN '(' para_in ')' compound .  (108)

	.  reduce 108


state 172
	extdef : type IDEN '(' para_in ')' ';' .  (26)

	.  reduce 26


state 173
	func_def : type IDEN '(' para_in ')' compound .  (107)

	.  reduce 107


state 174
	expr : IDEN '(' exprs_comma_x ')' . ';'  (43)

	';'  shift 214
	.  error


state 175
	exprs_comma : exprs_comma ',' . expr  (112)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 215
	var  goto 90


state 176
	index : '[' expr ']' .  (131)

	.  reduce 131


state 177
	expr : '(' expr ')' .  (60)

	.  reduce 60


state 178
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr ANDAND expr .  (57)
	expr : expr . OROR expr  (58)

	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 57
	SWITCH  reduce 57
	CASE  reduce 57
	DEFAULT  reduce 57
	IF  reduce 57
	FOR  reduce 57
	WHILE  reduce 57
	DO  reduce 57
	CONTINUE  reduce 57
	BREAK  reduce 57
	ANDAND  reduce 57
	OROR  reduce 57
	')'  reduce 57
	';'  reduce 57
	','  reduce 57
	'}'  reduce 57
	']'  reduce 57


state 179
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	expr : expr OROR expr .  (58)

	ANDAND  shift 131
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 58
	SWITCH  reduce 58
	CASE  reduce 58
	DEFAULT  reduce 58
	IF  reduce 58
	FOR  reduce 58
	WHILE  reduce 58
	DO  reduce 58
	CONTINUE  reduce 58
	BREAK  reduce 58
	OROR  reduce 58
	')'  reduce 58
	';'  reduce 58
	','  reduce 58
	'}'  reduce 58
	']'  reduce 58


state 180
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr GE expr .  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 52
	SWITCH  reduce 52
	CASE  reduce 52
	DEFAULT  reduce 52
	IF  reduce 52
	FOR  reduce 52
	WHILE  reduce 52
	DO  reduce 52
	CONTINUE  reduce 52
	BREAK  reduce 52
	ANDAND  reduce 52
	OROR  reduce 52
	GE  reduce 52
	LE  reduce 52
	EQUAL  reduce 52
	NOTEQUAL  reduce 52
	'>'  reduce 52
	'<'  reduce 52
	')'  reduce 52
	';'  reduce 52
	','  reduce 52
	'}'  reduce 52
	']'  reduce 52


state 181
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr LE expr .  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 53
	SWITCH  reduce 53
	CASE  reduce 53
	DEFAULT  reduce 53
	IF  reduce 53
	FOR  reduce 53
	WHILE  reduce 53
	DO  reduce 53
	CONTINUE  reduce 53
	BREAK  reduce 53
	ANDAND  reduce 53
	OROR  reduce 53
	GE  reduce 53
	LE  reduce 53
	EQUAL  reduce 53
	NOTEQUAL  reduce 53
	'>'  reduce 53
	'<'  reduce 53
	')'  reduce 53
	';'  reduce 53
	','  reduce 53
	'}'  reduce 53
	']'  reduce 53


state 182
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr EQUAL expr .  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 54
	SWITCH  reduce 54
	CASE  reduce 54
	DEFAULT  reduce 54
	IF  reduce 54
	FOR  reduce 54
	WHILE  reduce 54
	DO  reduce 54
	CONTINUE  reduce 54
	BREAK  reduce 54
	ANDAND  reduce 54
	OROR  reduce 54
	GE  reduce 54
	LE  reduce 54
	EQUAL  reduce 54
	NOTEQUAL  reduce 54
	'>'  reduce 54
	'<'  reduce 54
	')'  reduce 54
	';'  reduce 54
	','  reduce 54
	'}'  reduce 54
	']'  reduce 54


state 183
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr NOTEQUAL expr .  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 55
	SWITCH  reduce 55
	CASE  reduce 55
	DEFAULT  reduce 55
	IF  reduce 55
	FOR  reduce 55
	WHILE  reduce 55
	DO  reduce 55
	CONTINUE  reduce 55
	BREAK  reduce 55
	ANDAND  reduce 55
	OROR  reduce 55
	GE  reduce 55
	LE  reduce 55
	EQUAL  reduce 55
	NOTEQUAL  reduce 55
	'>'  reduce 55
	'<'  reduce 55
	')'  reduce 55
	';'  reduce 55
	','  reduce 55
	'}'  reduce 55
	']'  reduce 55


state 184
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr '>' expr .  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 50
	SWITCH  reduce 50
	CASE  reduce 50
	DEFAULT  reduce 50
	IF  reduce 50
	FOR  reduce 50
	WHILE  reduce 50
	DO  reduce 50
	CONTINUE  reduce 50
	BREAK  reduce 50
	ANDAND  reduce 50
	OROR  reduce 50
	GE  reduce 50
	LE  reduce 50
	EQUAL  reduce 50
	NOTEQUAL  reduce 50
	'>'  reduce 50
	'<'  reduce 50
	')'  reduce 50
	';'  reduce 50
	','  reduce 50
	'}'  reduce 50
	']'  reduce 50


state 185
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr '<' expr .  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 51
	SWITCH  reduce 51
	CASE  reduce 51
	DEFAULT  reduce 51
	IF  reduce 51
	FOR  reduce 51
	WHILE  reduce 51
	DO  reduce 51
	CONTINUE  reduce 51
	BREAK  reduce 51
	ANDAND  reduce 51
	OROR  reduce 51
	GE  reduce 51
	LE  reduce 51
	EQUAL  reduce 51
	NOTEQUAL  reduce 51
	'>'  reduce 51
	'<'  reduce 51
	')'  reduce 51
	';'  reduce 51
	','  reduce 51
	'}'  reduce 51
	']'  reduce 51


state 186
	expr : expr . '+' expr  (45)
	expr : expr '+' expr .  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 45
	SWITCH  reduce 45
	CASE  reduce 45
	DEFAULT  reduce 45
	IF  reduce 45
	FOR  reduce 45
	WHILE  reduce 45
	DO  reduce 45
	CONTINUE  reduce 45
	BREAK  reduce 45
	ANDAND  reduce 45
	OROR  reduce 45
	GE  reduce 45
	LE  reduce 45
	EQUAL  reduce 45
	NOTEQUAL  reduce 45
	'>'  reduce 45
	'<'  reduce 45
	'+'  reduce 45
	'-'  reduce 45
	')'  reduce 45
	';'  reduce 45
	','  reduce 45
	'}'  reduce 45
	']'  reduce 45


state 187
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr '-' expr .  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 46
	SWITCH  reduce 46
	CASE  reduce 46
	DEFAULT  reduce 46
	IF  reduce 46
	FOR  reduce 46
	WHILE  reduce 46
	DO  reduce 46
	CONTINUE  reduce 46
	BREAK  reduce 46
	ANDAND  reduce 46
	OROR  reduce 46
	GE  reduce 46
	LE  reduce 46
	EQUAL  reduce 46
	NOTEQUAL  reduce 46
	'>'  reduce 46
	'<'  reduce 46
	'+'  reduce 46
	'-'  reduce 46
	')'  reduce 46
	';'  reduce 46
	','  reduce 46
	'}'  reduce 46
	']'  reduce 46


state 188
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr '*' expr .  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	.  reduce 47


state 189
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr '/' expr .  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	.  reduce 48


state 190
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr '%' expr .  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	.  reduce 49


state 191
	expr : var '=' IDEN '(' . exprs_comma_x ')' ';'  (44)
	exprs_comma_x : .  (110)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	')'  reduce 110

	literal  goto 88
	expr  goto 123
	var  goto 90
	exprs_comma_x  goto 216
	exprs_comma  goto 125


state 192
	array_init : '=' '{' exprs_comma_no_invoke_x '}' .  (119)

	.  reduce 119


state 193
	exprs_comma_no_invoke : exprs_comma_no_invoke ',' . expr_no_invoke  (116)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 58
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 61
	'('  shift 62
	.  error

	literal  goto 63
	expr  goto 64
	var  goto 65
	expr_no_invoke  goto 217


state 194
	dec : CONST type . const_iden_list ';'  (36)

	IDEN  shift 25
	.  error

	const_iden_list  goto 218


state 195
	iden_list_init : IDEN . init  (17)
	iden_list_init : IDEN .  (18)
	iden_list_init : IDEN . indexs_dec array_init  (19)
	iden_list_init : IDEN . indexs_dec  (20)

	'='  shift 34
	'['  shift 35
	';'  reduce 18
	','  reduce 18

	init  goto 36
	indexs_dec  goto 37
	index_dec  goto 38


state 196
	iden_list_init : iden_list_init . ',' IDEN  (13)
	iden_list_init : iden_list_init . ',' IDEN init  (14)
	iden_list_init : iden_list_init . ',' IDEN indexs_dec array_init  (15)
	iden_list_init : iden_list_init . ',' IDEN indexs_dec  (16)
	dec : type iden_list_init . ';'  (35)

	';'  shift 219
	','  shift 40
	.  error


state 197
	var : IDEN . indexs  (5)
	var : IDEN .  (6)

	'['  shift 82
	IDEN  reduce 6
	SWITCH  reduce 6
	CASE  reduce 6
	DEFAULT  reduce 6
	IF  reduce 6
	FOR  reduce 6
	WHILE  reduce 6
	DO  reduce 6
	CONTINUE  reduce 6
	BREAK  reduce 6
	'='  reduce 6
	'}'  reduce 6

	indexs  goto 83
	index  goto 84


state 198
	switch_stmt : SWITCH . '(' IDEN ')' '{' cases default_x '}'  (98)

	'('  shift 220
	.  error


state 199
	if_stmt : IF . '(' expr ')' compound  (93)
	if_stmt : IF . '(' expr ')' compound ELSE compound  (94)

	'('  shift 221
	.  error


state 200
	for_stmt : FOR . '(' expr_x ';' expr_x ';' expr_x ')' compound  (97)

	'('  shift 222
	.  error


state 201
	while_stmt : WHILE . '(' expr ')' compound  (95)

	'('  shift 223
	.  error


state 202
	while_stmt : DO . compound WHILE '(' expr ')' ';'  (96)

	'{'  shift 115
	.  error

	compound  goto 224


state 203
	stmt : CONTINUE . ';'  (92)

	';'  shift 225
	.  error


state 204
	stmt : BREAK . ';'  (91)

	';'  shift 226
	.  error


state 205
	stmt : var . '=' expr  (85)
	stmt : var .  (90)

	'='  shift 227
	IDEN  reduce 90
	SWITCH  reduce 90
	CASE  reduce 90
	DEFAULT  reduce 90
	IF  reduce 90
	FOR  reduce 90
	WHILE  reduce 90
	DO  reduce 90
	CONTINUE  reduce 90
	BREAK  reduce 90
	'}'  reduce 90


state 206
	compound : '{' decs_x stmts_x . '}'  (109)

	'}'  shift 228
	.  error


state 207
	stmts_x : stmts .  (82)
	stmts : stmts . stmt  (83)

	IDEN  shift 197
	SWITCH  shift 198
	IF  shift 199
	FOR  shift 200
	WHILE  shift 201
	DO  shift 202
	CONTINUE  shift 203
	BREAK  shift 204
	CASE  reduce 82
	DEFAULT  reduce 82
	'}'  reduce 82

	var  goto 205
	stmt  goto 229
	if_stmt  goto 209
	while_stmt  goto 210
	switch_stmt  goto 211
	for_stmt  goto 212


state 208
	stmts : stmt .  (84)

	.  reduce 84


state 209
	stmt : if_stmt .  (86)

	.  reduce 86


state 210
	stmt : while_stmt .  (87)

	.  reduce 87


state 211
	stmt : switch_stmt .  (88)

	.  reduce 88


state 212
	stmt : for_stmt .  (89)

	.  reduce 89


state 213
	decs : decs dec .  (33)

	.  reduce 33


state 214
	expr : IDEN '(' exprs_comma_x ')' ';' .  (43)

	.  reduce 43


state 215
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	exprs_comma : exprs_comma ',' expr .  (112)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  reduce 112
	','  reduce 112


state 216
	expr : var '=' IDEN '(' exprs_comma_x . ')' ';'  (44)

	')'  shift 230
	.  error


state 217
	exprs_comma_no_invoke : exprs_comma_no_invoke ',' expr_no_invoke .  (116)

	.  reduce 116


state 218
	const_iden_list : const_iden_list . ',' IDEN const_init  (21)
	dec : CONST type const_iden_list . ';'  (36)

	';'  shift 231
	','  shift 48
	.  error


state 219
	dec : type iden_list_init ';' .  (35)

	.  reduce 35


state 220
	switch_stmt : SWITCH '(' . IDEN ')' '{' cases default_x '}'  (98)

	IDEN  shift 232
	.  error


state 221
	if_stmt : IF '(' . expr ')' compound  (93)
	if_stmt : IF '(' . expr ')' compound ELSE compound  (94)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 233
	var  goto 90


state 222
	for_stmt : FOR '(' . expr_x ';' expr_x ';' expr_x ')' compound  (97)
	expr_x : .  (37)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	';'  reduce 37

	literal  goto 88
	expr  goto 234
	var  goto 90
	expr_x  goto 235


state 223
	while_stmt : WHILE '(' . expr ')' compound  (95)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 236
	var  goto 90


state 224
	while_stmt : DO compound . WHILE '(' expr ')' ';'  (96)

	WHILE  shift 237
	.  error


state 225
	stmt : CONTINUE ';' .  (92)

	.  reduce 92


state 226
	stmt : BREAK ';' .  (91)

	.  reduce 91


state 227
	stmt : var '=' . expr  (85)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 238
	var  goto 90


state 228
	compound : '{' decs_x stmts_x '}' .  (109)

	.  reduce 109


state 229
	stmts : stmts stmt .  (83)

	.  reduce 83


state 230
	expr : var '=' IDEN '(' exprs_comma_x ')' . ';'  (44)

	';'  shift 239
	.  error


state 231
	dec : CONST type const_iden_list ';' .  (36)

	.  reduce 36


state 232
	switch_stmt : SWITCH '(' IDEN . ')' '{' cases default_x '}'  (98)

	')'  shift 240
	.  error


state 233
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	if_stmt : IF '(' expr . ')' compound  (93)
	if_stmt : IF '(' expr . ')' compound ELSE compound  (94)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  shift 241
	.  error


state 234
	expr_x : expr .  (38)
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  reduce 38
	';'  reduce 38


state 235
	for_stmt : FOR '(' expr_x . ';' expr_x ';' expr_x ')' compound  (97)

	';'  shift 242
	.  error


state 236
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	while_stmt : WHILE '(' expr . ')' compound  (95)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  shift 243
	.  error


state 237
	while_stmt : DO compound WHILE . '(' expr ')' ';'  (96)

	'('  shift 244
	.  error


state 238
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	stmt : var '=' expr .  (85)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	IDEN  reduce 85
	SWITCH  reduce 85
	CASE  reduce 85
	DEFAULT  reduce 85
	IF  reduce 85
	FOR  reduce 85
	WHILE  reduce 85
	DO  reduce 85
	CONTINUE  reduce 85
	BREAK  reduce 85
	'}'  reduce 85


state 239
	expr : var '=' IDEN '(' exprs_comma_x ')' ';' .  (44)

	.  reduce 44


state 240
	switch_stmt : SWITCH '(' IDEN ')' . '{' cases default_x '}'  (98)

	'{'  shift 245
	.  error


state 241
	if_stmt : IF '(' expr ')' . compound  (93)
	if_stmt : IF '(' expr ')' . compound ELSE compound  (94)

	'{'  shift 115
	.  error

	compound  goto 246


state 242
	for_stmt : FOR '(' expr_x ';' . expr_x ';' expr_x ')' compound  (97)
	expr_x : .  (37)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	';'  reduce 37

	literal  goto 88
	expr  goto 234
	var  goto 90
	expr_x  goto 247


state 243
	while_stmt : WHILE '(' expr ')' . compound  (95)

	'{'  shift 115
	.  error

	compound  goto 248


state 244
	while_stmt : DO compound WHILE '(' . expr ')' ';'  (96)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	.  error

	literal  goto 88
	expr  goto 249
	var  goto 90


state 245
	switch_stmt : SWITCH '(' IDEN ')' '{' . cases default_x '}'  (98)

	CASE  shift 250
	.  error

	cases  goto 251
	case  goto 252


state 246
	if_stmt : IF '(' expr ')' compound .  (93)
	if_stmt : IF '(' expr ')' compound . ELSE compound  (94)

	ELSE  shift 253
	IDEN  reduce 93
	SWITCH  reduce 93
	CASE  reduce 93
	DEFAULT  reduce 93
	IF  reduce 93
	FOR  reduce 93
	WHILE  reduce 93
	DO  reduce 93
	CONTINUE  reduce 93
	BREAK  reduce 93
	'}'  reduce 93


state 247
	for_stmt : FOR '(' expr_x ';' expr_x . ';' expr_x ')' compound  (97)

	';'  shift 254
	.  error


state 248
	while_stmt : WHILE '(' expr ')' compound .  (95)

	.  reduce 95


state 249
	expr : expr . '+' expr  (45)
	expr : expr . '-' expr  (46)
	expr : expr . '*' expr  (47)
	expr : expr . '/' expr  (48)
	expr : expr . '%' expr  (49)
	expr : expr . '>' expr  (50)
	expr : expr . '<' expr  (51)
	expr : expr . GE expr  (52)
	expr : expr . LE expr  (53)
	expr : expr . EQUAL expr  (54)
	expr : expr . NOTEQUAL expr  (55)
	expr : expr . ANDAND expr  (57)
	expr : expr . OROR expr  (58)
	while_stmt : DO compound WHILE '(' expr . ')' ';'  (96)

	ANDAND  shift 131
	OROR  shift 132
	GE  shift 133
	LE  shift 134
	EQUAL  shift 135
	NOTEQUAL  shift 136
	'>'  shift 137
	'<'  shift 138
	'+'  shift 139
	'-'  shift 140
	'*'  shift 141
	'/'  shift 142
	'%'  shift 143
	')'  shift 255
	.  error


state 250
	case : CASE . CHAR_LIT ':' stmts_x  (101)
	case : CASE . INT_LIT ':' stmts_x  (102)

	INT_LIT  shift 256
	CHAR_LIT  shift 257
	.  error


state 251
	switch_stmt : SWITCH '(' IDEN ')' '{' cases . default_x '}'  (98)
	cases : cases . case  (99)
	default_x : .  (103)

	CASE  shift 250
	DEFAULT  shift 258
	'}'  reduce 103

	default_x  goto 259
	case  goto 260


state 252
	cases : case .  (100)

	.  reduce 100


state 253
	if_stmt : IF '(' expr ')' compound ELSE . compound  (94)

	'{'  shift 115
	.  error

	compound  goto 261


state 254
	for_stmt : FOR '(' expr_x ';' expr_x ';' . expr_x ')' compound  (97)
	expr_x : .  (37)

	IDEN  shift 54
	STRING_LIT  shift 55
	INT_LIT  shift 56
	BOOL_LIT  shift 57
	NOT  shift 85
	CHAR_LIT  shift 59
	DOUBLE_LIT  shift 60
	'-'  shift 86
	'('  shift 87
	')'  reduce 37

	literal  goto 88
	expr  goto 234
	var  goto 90
	expr_x  goto 262


state 255
	while_stmt : DO compound WHILE '(' expr ')' . ';'  (96)

	';'  shift 263
	.  error


state 256
	case : CASE INT_LIT . ':' stmts_x  (102)

	':'  shift 264
	.  error


state 257
	case : CASE CHAR_LIT . ':' stmts_x  (101)

	':'  shift 265
	.  error


state 258
	default_x : DEFAULT . ':' stmts_x  (104)

	':'  shift 266
	.  error


state 259
	switch_stmt : SWITCH '(' IDEN ')' '{' cases default_x . '}'  (98)

	'}'  shift 267
	.  error


state 260
	cases : cases case .  (99)

	.  reduce 99


state 261
	if_stmt : IF '(' expr ')' compound ELSE compound .  (94)

	.  reduce 94


state 262
	for_stmt : FOR '(' expr_x ';' expr_x ';' expr_x . ')' compound  (97)

	')'  shift 268
	.  error


state 263
	while_stmt : DO compound WHILE '(' expr ')' ';' .  (96)

	.  reduce 96


state 264
	case : CASE INT_LIT ':' . stmts_x  (102)
	stmts_x : .  (81)

	IDEN  shift 197
	SWITCH  shift 198
	IF  shift 199
	FOR  shift 200
	WHILE  shift 201
	DO  shift 202
	CONTINUE  shift 203
	BREAK  shift 204
	CASE  reduce 81
	DEFAULT  reduce 81
	'}'  reduce 81

	var  goto 205
	stmts_x  goto 269
	stmts  goto 207
	stmt  goto 208
	if_stmt  goto 209
	while_stmt  goto 210
	switch_stmt  goto 211
	for_stmt  goto 212


state 265
	case : CASE CHAR_LIT ':' . stmts_x  (101)
	stmts_x : .  (81)

	IDEN  shift 197
	SWITCH  shift 198
	IF  shift 199
	FOR  shift 200
	WHILE  shift 201
	DO  shift 202
	CONTINUE  shift 203
	BREAK  shift 204
	CASE  reduce 81
	DEFAULT  reduce 81
	'}'  reduce 81

	var  goto 205
	stmts_x  goto 270
	stmts  goto 207
	stmt  goto 208
	if_stmt  goto 209
	while_stmt  goto 210
	switch_stmt  goto 211
	for_stmt  goto 212


state 266
	default_x : DEFAULT ':' . stmts_x  (104)
	stmts_x : .  (81)

	IDEN  shift 197
	SWITCH  shift 198
	IF  shift 199
	FOR  shift 200
	WHILE  shift 201
	DO  shift 202
	CONTINUE  shift 203
	BREAK  shift 204
	'}'  reduce 81

	var  goto 205
	stmts_x  goto 271
	stmts  goto 207
	stmt  goto 208
	if_stmt  goto 209
	while_stmt  goto 210
	switch_stmt  goto 211
	for_stmt  goto 212


state 267
	switch_stmt : SWITCH '(' IDEN ')' '{' cases default_x '}' .  (98)

	.  reduce 98


state 268
	for_stmt : FOR '(' expr_x ';' expr_x ';' expr_x ')' . compound  (97)

	'{'  shift 115
	.  error

	compound  goto 272


state 269
	case : CASE INT_LIT ':' stmts_x .  (102)

	.  reduce 102


state 270
	case : CASE CHAR_LIT ':' stmts_x .  (101)

	.  reduce 101


state 271
	default_x : DEFAULT ':' stmts_x .  (104)

	.  reduce 104


state 272
	for_stmt : FOR '(' expr_x ';' expr_x ';' expr_x ')' compound .  (97)

	.  reduce 97


54 terminals, 44 nonterminals
141 grammar rules, 273 states
